@startuml
struct ColoredText <<record>> {
    + Text : string <<get>> <<init>>
    + Color : ConsoleColor <<get>> <<init>> = ConsoleColor.Gray
}
class GameState {
    + GameLog : List<ColoredText> <<get>>
    + WindowManager : ConsoleWindowManager <<get>> <<set>>
    + PlayerName : string <<get>> <<set>> = "Hero"
    + Level : int <<get>> <<set>> = 1
    + HP : int <<get>> <<set>> = 100
    + MaxHP : int <<get>> <<set>> = 100
    + Gold : int <<get>> <<set>> = 100
    + Stats : Dictionary<string, int> <<get>>
    + Inventory : List<string> <<get>>
    + GameFlags : Dictionary<string, bool> <<get>>
    + CommandHandler : CommandHandler <<get>>
    + Running : bool <<get>> <<set>> = true
    + Localization : LocalisationManager <<get>>
    + World : WorldLoader? <<get>> <<set>>
    + CurrentRegion : WorldRegion? <<get>> <<set>>
    + CurrentWorldPath : string <<get>> = ""
    + CurrentLocation : Location? <<get>> <<set>>
    + WorldPath : string? <<get>> <<set>>
    + DiscoveredLocations : HashSet<string> <<get>>
    + RegionExploration : Dictionary<int, float> <<get>>
    + TotalPlayTime : TimeSpan <<get>> <<set>>
    + PlayerPosition : Vector2 <<get>> <<set>>
    + CurrentPlayer : Person? <<get>> <<set>>
    + CurrentExperience : int <<get>> <<set>>
    + Reputation : Dictionary<string, int> <<get>>
    + CurrentSaveMetadata : SaveMetadata? <<get>> <<set>>
    + Input : Input <<get>>
    + QuestManager : QuestManager <<get>>
    + ExperienceSystem : ExperienceSystem <<get>>
    + InputSuspended : bool <<get>> <<set>>
    +  <<event>> OnPlayerClassChanged : Action<Person>? 
    + GameState()
    + GameState(manager:ConsoleWindowManager)
    + AddLogMessage(message:ColoredText) : void
    + NavigateToLocation(location:Location) : void
    - DescribeCurrentLocation() : void
    - <<readonly>> _flags : Dictionary<string, bool>
    + SetFlag(flag:string, value:bool) : void
    + GetFlag(flag:string) : bool
    + ModifyReputation(faction:string, amount:int) : void
    + GetReputation(faction:string) : int
    + AutoSave() : void
    + TransformPlayerClass(newPlayerClass:Person) : void
}
@enduml
