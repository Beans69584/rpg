### YamlMime:ManagedReference
items:
- uid: RPG.ProceduralWorldGenerator
  commentId: T:RPG.ProceduralWorldGenerator
  id: ProceduralWorldGenerator
  parent: RPG
  children:
  - RPG.ProceduralWorldGenerator.#ctor(System.Int32,System.Int32,System.Int32)
  - RPG.ProceduralWorldGenerator.GenerateWorld
  langs:
  - csharp
  - vb
  name: ProceduralWorldGenerator
  nameWithType: ProceduralWorldGenerator
  fullName: RPG.ProceduralWorldGenerator
  type: Class
  source:
    remote:
      path: ProceduralWorldGenerator.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: ProceduralWorldGenerator
    path: ../ProceduralWorldGenerator.cs
    startLine: 201
  assemblies:
  - RPG
  namespace: RPG
  summary: Represents the configuration for a generated world.
  example: []
  syntax:
    content: public class ProceduralWorldGenerator
    content.vb: Public Class ProceduralWorldGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RPG.ProceduralWorldGenerator.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:RPG.ProceduralWorldGenerator.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: RPG.ProceduralWorldGenerator
  langs:
  - csharp
  - vb
  name: ProceduralWorldGenerator(int, int, int)
  nameWithType: ProceduralWorldGenerator.ProceduralWorldGenerator(int, int, int)
  fullName: RPG.ProceduralWorldGenerator.ProceduralWorldGenerator(int, int, int)
  type: Constructor
  source:
    remote:
      path: ProceduralWorldGenerator.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: .ctor
    path: ../ProceduralWorldGenerator.cs
    startLine: 215
  assemblies:
  - RPG
  namespace: RPG
  summary: Initialises a new instance of the <xref href="RPG.ProceduralWorldGenerator" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public ProceduralWorldGenerator(int seed = 0, int width = 100, int height = 100)
    parameters:
    - id: seed
      type: System.Int32
      description: The seed value for the random number generator.
    - id: width
      type: System.Int32
      description: The width of the generated world.
    - id: height
      type: System.Int32
      description: The height of the generated world.
    content.vb: Public Sub New(seed As Integer = 0, width As Integer = 100, height As Integer = 100)
  overload: RPG.ProceduralWorldGenerator.#ctor*
  nameWithType.vb: ProceduralWorldGenerator.New(Integer, Integer, Integer)
  fullName.vb: RPG.ProceduralWorldGenerator.New(Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer)
- uid: RPG.ProceduralWorldGenerator.GenerateWorld
  commentId: M:RPG.ProceduralWorldGenerator.GenerateWorld
  id: GenerateWorld
  parent: RPG.ProceduralWorldGenerator
  langs:
  - csharp
  - vb
  name: GenerateWorld()
  nameWithType: ProceduralWorldGenerator.GenerateWorld()
  fullName: RPG.ProceduralWorldGenerator.GenerateWorld()
  type: Method
  source:
    remote:
      path: ProceduralWorldGenerator.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GenerateWorld
    path: ../ProceduralWorldGenerator.cs
    startLine: 297
  assemblies:
  - RPG
  namespace: RPG
  summary: Generates a new world configuration based on the current settings.
  example: []
  syntax:
    content: public WorldConfig GenerateWorld()
    return:
      type: RPG.WorldConfig
      description: A new <xref href="RPG.WorldConfig" data-throw-if-not-resolved="false"></xref> instance representing the generated world.
    content.vb: Public Function GenerateWorld() As WorldConfig
  overload: RPG.ProceduralWorldGenerator.GenerateWorld*
references:
- uid: RPG
  commentId: N:RPG
  href: RPG.html
  name: RPG
  nameWithType: RPG
  fullName: RPG
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RPG.ProceduralWorldGenerator
  commentId: T:RPG.ProceduralWorldGenerator
  href: RPG.ProceduralWorldGenerator.html
  name: ProceduralWorldGenerator
  nameWithType: ProceduralWorldGenerator
  fullName: RPG.ProceduralWorldGenerator
- uid: RPG.ProceduralWorldGenerator.#ctor*
  commentId: Overload:RPG.ProceduralWorldGenerator.#ctor
  href: RPG.ProceduralWorldGenerator.html#RPG_ProceduralWorldGenerator__ctor_System_Int32_System_Int32_System_Int32_
  name: ProceduralWorldGenerator
  nameWithType: ProceduralWorldGenerator.ProceduralWorldGenerator
  fullName: RPG.ProceduralWorldGenerator.ProceduralWorldGenerator
  nameWithType.vb: ProceduralWorldGenerator.New
  fullName.vb: RPG.ProceduralWorldGenerator.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: RPG.WorldConfig
  commentId: T:RPG.WorldConfig
  parent: RPG
  href: RPG.WorldConfig.html
  name: WorldConfig
  nameWithType: WorldConfig
  fullName: RPG.WorldConfig
- uid: RPG.ProceduralWorldGenerator.GenerateWorld*
  commentId: Overload:RPG.ProceduralWorldGenerator.GenerateWorld
  href: RPG.ProceduralWorldGenerator.html#RPG_ProceduralWorldGenerator_GenerateWorld
  name: GenerateWorld
  nameWithType: ProceduralWorldGenerator.GenerateWorld
  fullName: RPG.ProceduralWorldGenerator.GenerateWorld
