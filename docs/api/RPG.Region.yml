### YamlMime:ManagedReference
items:
- uid: RPG.Region
  commentId: T:RPG.Region
  id: Region
  parent: RPG
  children:
  - RPG.Region.BorderColor
  - RPG.Region.Bounds
  - RPG.Region.ContentBounds
  - RPG.Region.Height
  - RPG.Region.IsVisible
  - RPG.Region.Name
  - RPG.Region.Padding
  - RPG.Region.RenderContent
  - RPG.Region.TitleColor
  - RPG.Region.Width
  - RPG.Region.X
  - RPG.Region.Y
  - RPG.Region.ZIndex
  langs:
  - csharp
  - vb
  name: Region
  nameWithType: Region
  fullName: RPG.Region
  type: Class
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Region
    path: ../ConsoleWindowManager.cs
    startLine: 13
  assemblies:
  - RPG
  namespace: RPG
  summary: Represents a rectangular region within a console window that can display content with borders and titles.
  example: []
  syntax:
    content: public class Region
    content.vb: Public Class Region
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RPG.Region.X
  commentId: P:RPG.Region.X
  id: X
  parent: RPG.Region
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Region.X
  fullName: RPG.Region.X
  type: Property
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: X
    path: ../ConsoleWindowManager.cs
    startLine: 18
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the X-coordinate of the region's top-left corner.
  example: []
  syntax:
    content: public int X { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property X As Integer
  overload: RPG.Region.X*
- uid: RPG.Region.Y
  commentId: P:RPG.Region.Y
  id: Y
  parent: RPG.Region
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Region.Y
  fullName: RPG.Region.Y
  type: Property
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Y
    path: ../ConsoleWindowManager.cs
    startLine: 23
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the Y-coordinate of the region's top-left corner.
  example: []
  syntax:
    content: public int Y { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Y As Integer
  overload: RPG.Region.Y*
- uid: RPG.Region.Width
  commentId: P:RPG.Region.Width
  id: Width
  parent: RPG.Region
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Region.Width
  fullName: RPG.Region.Width
  type: Property
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Width
    path: ../ConsoleWindowManager.cs
    startLine: 28
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the total width of the region, including borders.
  example: []
  syntax:
    content: public int Width { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Width As Integer
  overload: RPG.Region.Width*
- uid: RPG.Region.Height
  commentId: P:RPG.Region.Height
  id: Height
  parent: RPG.Region
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Region.Height
  fullName: RPG.Region.Height
  type: Property
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Height
    path: ../ConsoleWindowManager.cs
    startLine: 33
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the total height of the region, including borders.
  example: []
  syntax:
    content: public int Height { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Height As Integer
  overload: RPG.Region.Height*
- uid: RPG.Region.Padding
  commentId: P:RPG.Region.Padding
  id: Padding
  parent: RPG.Region
  langs:
  - csharp
  - vb
  name: Padding
  nameWithType: Region.Padding
  fullName: RPG.Region.Padding
  type: Property
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Padding
    path: ../ConsoleWindowManager.cs
    startLine: 38
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the padding between the region's border and its content.
  example: []
  syntax:
    content: public int Padding { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Padding As Integer
  overload: RPG.Region.Padding*
- uid: RPG.Region.ZIndex
  commentId: P:RPG.Region.ZIndex
  id: ZIndex
  parent: RPG.Region
  langs:
  - csharp
  - vb
  name: ZIndex
  nameWithType: Region.ZIndex
  fullName: RPG.Region.ZIndex
  type: Property
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: ZIndex
    path: ../ConsoleWindowManager.cs
    startLine: 43
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the Z-index which determines the drawing order when regions overlap.
  example: []
  syntax:
    content: public int ZIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ZIndex As Integer
  overload: RPG.Region.ZIndex*
- uid: RPG.Region.Name
  commentId: P:RPG.Region.Name
  id: Name
  parent: RPG.Region
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Region.Name
  fullName: RPG.Region.Name
  type: Property
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Name
    path: ../ConsoleWindowManager.cs
    startLine: 48
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the optional title text displayed at the top of the region.
  example: []
  syntax:
    content: public string? Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: RPG.Region.Name*
- uid: RPG.Region.BorderColor
  commentId: P:RPG.Region.BorderColor
  id: BorderColor
  parent: RPG.Region
  langs:
  - csharp
  - vb
  name: BorderColor
  nameWithType: Region.BorderColor
  fullName: RPG.Region.BorderColor
  type: Property
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: BorderColor
    path: ../ConsoleWindowManager.cs
    startLine: 53
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the colour of the region's border.
  example: []
  syntax:
    content: public ConsoleColor BorderColor { get; set; }
    parameters: []
    return:
      type: System.ConsoleColor
    content.vb: Public Property BorderColor As ConsoleColor
  overload: RPG.Region.BorderColor*
- uid: RPG.Region.TitleColor
  commentId: P:RPG.Region.TitleColor
  id: TitleColor
  parent: RPG.Region
  langs:
  - csharp
  - vb
  name: TitleColor
  nameWithType: Region.TitleColor
  fullName: RPG.Region.TitleColor
  type: Property
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: TitleColor
    path: ../ConsoleWindowManager.cs
    startLine: 58
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the colour of the region's title text.
  example: []
  syntax:
    content: public ConsoleColor TitleColor { get; set; }
    parameters: []
    return:
      type: System.ConsoleColor
    content.vb: Public Property TitleColor As ConsoleColor
  overload: RPG.Region.TitleColor*
- uid: RPG.Region.IsVisible
  commentId: P:RPG.Region.IsVisible
  id: IsVisible
  parent: RPG.Region
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: Region.IsVisible
  fullName: RPG.Region.IsVisible
  type: Property
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: IsVisible
    path: ../ConsoleWindowManager.cs
    startLine: 63
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets whether the region should be visible when rendered.
  example: []
  syntax:
    content: public bool IsVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsVisible As Boolean
  overload: RPG.Region.IsVisible*
- uid: RPG.Region.RenderContent
  commentId: P:RPG.Region.RenderContent
  id: RenderContent
  parent: RPG.Region
  langs:
  - csharp
  - vb
  name: RenderContent
  nameWithType: Region.RenderContent
  fullName: RPG.Region.RenderContent
  type: Property
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: RenderContent
    path: ../ConsoleWindowManager.cs
    startLine: 68
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the delegate responsible for rendering the region's content.
  example: []
  syntax:
    content: public Action<Region>? RenderContent { get; set; }
    parameters: []
    return:
      type: System.Action{RPG.Region}
    content.vb: Public Property RenderContent As Action(Of Region)
  overload: RPG.Region.RenderContent*
- uid: RPG.Region.Bounds
  commentId: P:RPG.Region.Bounds
  id: Bounds
  parent: RPG.Region
  langs:
  - csharp
  - vb
  name: Bounds
  nameWithType: Region.Bounds
  fullName: RPG.Region.Bounds
  type: Property
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Bounds
    path: ../ConsoleWindowManager.cs
    startLine: 73
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the outer bounds of the region, including its borders.
  example: []
  syntax:
    content: public Rectangle Bounds { get; }
    parameters: []
    return:
      type: RPG.Rectangle
    content.vb: Public ReadOnly Property Bounds As Rectangle
  overload: RPG.Region.Bounds*
- uid: RPG.Region.ContentBounds
  commentId: P:RPG.Region.ContentBounds
  id: ContentBounds
  parent: RPG.Region
  langs:
  - csharp
  - vb
  name: ContentBounds
  nameWithType: Region.ContentBounds
  fullName: RPG.Region.ContentBounds
  type: Property
  source:
    remote:
      path: ConsoleWindowManager.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: ContentBounds
    path: ../ConsoleWindowManager.cs
    startLine: 78
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the inner bounds of the region where content can be rendered, excluding borders and title area.
  example: []
  syntax:
    content: public Rectangle ContentBounds { get; }
    parameters: []
    return:
      type: RPG.Rectangle
    content.vb: Public ReadOnly Property ContentBounds As Rectangle
  overload: RPG.Region.ContentBounds*
references:
- uid: RPG
  commentId: N:RPG
  href: RPG.html
  name: RPG
  nameWithType: RPG
  fullName: RPG
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RPG.Region.X*
  commentId: Overload:RPG.Region.X
  href: RPG.Region.html#RPG_Region_X
  name: X
  nameWithType: Region.X
  fullName: RPG.Region.X
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: RPG.Region.Y*
  commentId: Overload:RPG.Region.Y
  href: RPG.Region.html#RPG_Region_Y
  name: Y
  nameWithType: Region.Y
  fullName: RPG.Region.Y
- uid: RPG.Region.Width*
  commentId: Overload:RPG.Region.Width
  href: RPG.Region.html#RPG_Region_Width
  name: Width
  nameWithType: Region.Width
  fullName: RPG.Region.Width
- uid: RPG.Region.Height*
  commentId: Overload:RPG.Region.Height
  href: RPG.Region.html#RPG_Region_Height
  name: Height
  nameWithType: Region.Height
  fullName: RPG.Region.Height
- uid: RPG.Region.Padding*
  commentId: Overload:RPG.Region.Padding
  href: RPG.Region.html#RPG_Region_Padding
  name: Padding
  nameWithType: Region.Padding
  fullName: RPG.Region.Padding
- uid: RPG.Region.ZIndex*
  commentId: Overload:RPG.Region.ZIndex
  href: RPG.Region.html#RPG_Region_ZIndex
  name: ZIndex
  nameWithType: Region.ZIndex
  fullName: RPG.Region.ZIndex
- uid: RPG.Region.Name*
  commentId: Overload:RPG.Region.Name
  href: RPG.Region.html#RPG_Region_Name
  name: Name
  nameWithType: Region.Name
  fullName: RPG.Region.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RPG.Region.BorderColor*
  commentId: Overload:RPG.Region.BorderColor
  href: RPG.Region.html#RPG_Region_BorderColor
  name: BorderColor
  nameWithType: Region.BorderColor
  fullName: RPG.Region.BorderColor
- uid: System.ConsoleColor
  commentId: T:System.ConsoleColor
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.consolecolor
  name: ConsoleColor
  nameWithType: ConsoleColor
  fullName: System.ConsoleColor
- uid: RPG.Region.TitleColor*
  commentId: Overload:RPG.Region.TitleColor
  href: RPG.Region.html#RPG_Region_TitleColor
  name: TitleColor
  nameWithType: Region.TitleColor
  fullName: RPG.Region.TitleColor
- uid: RPG.Region.IsVisible*
  commentId: Overload:RPG.Region.IsVisible
  href: RPG.Region.html#RPG_Region_IsVisible
  name: IsVisible
  nameWithType: Region.IsVisible
  fullName: RPG.Region.IsVisible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RPG.Region.RenderContent*
  commentId: Overload:RPG.Region.RenderContent
  href: RPG.Region.html#RPG_Region_RenderContent
  name: RenderContent
  nameWithType: Region.RenderContent
  fullName: RPG.Region.RenderContent
- uid: System.Action{RPG.Region}
  commentId: T:System.Action{RPG.Region}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Region>
  nameWithType: Action<Region>
  fullName: System.Action<RPG.Region>
  nameWithType.vb: Action(Of Region)
  fullName.vb: System.Action(Of RPG.Region)
  name.vb: Action(Of Region)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RPG.Region
    name: Region
    href: RPG.Region.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RPG.Region
    name: Region
    href: RPG.Region.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: RPG.Region.Bounds*
  commentId: Overload:RPG.Region.Bounds
  href: RPG.Region.html#RPG_Region_Bounds
  name: Bounds
  nameWithType: Region.Bounds
  fullName: RPG.Region.Bounds
- uid: RPG.Rectangle
  commentId: T:RPG.Rectangle
  parent: RPG
  href: RPG.Rectangle.html
  name: Rectangle
  nameWithType: Rectangle
  fullName: RPG.Rectangle
- uid: RPG.Region.ContentBounds*
  commentId: Overload:RPG.Region.ContentBounds
  href: RPG.Region.html#RPG_Region_ContentBounds
  name: ContentBounds
  nameWithType: Region.ContentBounds
  fullName: RPG.Region.ContentBounds
