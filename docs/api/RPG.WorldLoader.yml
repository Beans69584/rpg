### YamlMime:ManagedReference
items:
- uid: RPG.WorldLoader
  commentId: T:RPG.WorldLoader
  id: WorldLoader
  parent: RPG
  children:
  - RPG.WorldLoader.#ctor(System.String)
  - RPG.WorldLoader.GetConnectedRegions(RPG.WorldRegion)
  - RPG.WorldLoader.GetEntityName(RPG.Entity)
  - RPG.WorldLoader.GetItemDescription(RPG.Item)
  - RPG.WorldLoader.GetItemName(RPG.Item)
  - RPG.WorldLoader.GetItemsInLocation(RPG.Location)
  - RPG.WorldLoader.GetItemsInRegion(RPG.WorldRegion)
  - RPG.WorldLoader.GetLocationByName(RPG.WorldRegion,System.String)
  - RPG.WorldLoader.GetLocationDescription(RPG.Location)
  - RPG.WorldLoader.GetLocationName(RPG.Location)
  - RPG.WorldLoader.GetLocationsInRegion(RPG.WorldRegion)
  - RPG.WorldLoader.GetNPCDialogue(RPG.Entity)
  - RPG.WorldLoader.GetNPCsInLocation(RPG.Location)
  - RPG.WorldLoader.GetNPCsInRegion(RPG.WorldRegion)
  - RPG.WorldLoader.GetRegionByName(System.String)
  - RPG.WorldLoader.GetRegionDescription(RPG.WorldRegion)
  - RPG.WorldLoader.GetRegionName(RPG.WorldRegion)
  - RPG.WorldLoader.GetRoute(RPG.WorldRegion,RPG.WorldRegion)
  - RPG.WorldLoader.GetRouteDescription(RPG.RoutePoint)
  - RPG.WorldLoader.GetRouteDirections(RPG.RoutePoint)
  - RPG.WorldLoader.GetRouteLandmarks(RPG.RoutePoint)
  - RPG.WorldLoader.GetStartingRegion
  - RPG.WorldLoader.GetString(System.Int32)
  - RPG.WorldLoader.GetWorldData
  - RPG.WorldLoader.LocationNameMatches(RPG.Location,System.String)
  langs:
  - csharp
  - vb
  name: WorldLoader
  nameWithType: WorldLoader
  fullName: RPG.WorldLoader
  type: Class
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: WorldLoader
    path: ../WorldLoader.cs
    startLine: 12
  assemblies:
  - RPG
  namespace: RPG
  summary: Loads and provides access to world data from a compressed JSON file.
  example: []
  syntax:
    content: public class WorldLoader
    content.vb: Public Class WorldLoader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RPG.WorldLoader.#ctor(System.String)
  commentId: M:RPG.WorldLoader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: WorldLoader(string)
  nameWithType: WorldLoader.WorldLoader(string)
  fullName: RPG.WorldLoader.WorldLoader(string)
  type: Constructor
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: .ctor
    path: ../WorldLoader.cs
    startLine: 21
  assemblies:
  - RPG
  namespace: RPG
  summary: Initialises a new instance of the <xref href="RPG.WorldLoader" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public WorldLoader(string worldPath)
    parameters:
    - id: worldPath
      type: System.String
      description: The path to the compressed world data file.
    content.vb: Public Sub New(worldPath As String)
  overload: RPG.WorldLoader.#ctor*
  nameWithType.vb: WorldLoader.New(String)
  fullName.vb: RPG.WorldLoader.New(String)
  name.vb: New(String)
- uid: RPG.WorldLoader.GetString(System.Int32)
  commentId: M:RPG.WorldLoader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetString(int)
  nameWithType: WorldLoader.GetString(int)
  fullName: RPG.WorldLoader.GetString(int)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetString
    path: ../WorldLoader.cs
    startLine: 53
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the string with the specified ID.
  example: []
  syntax:
    content: public string GetString(int id)
    parameters:
    - id: id
      type: System.Int32
      description: The ID of the string to get.
    return:
      type: System.String
      description: The string with the specified ID, or a placeholder if not found.
    content.vb: Public Function GetString(id As Integer) As String
  overload: RPG.WorldLoader.GetString*
  nameWithType.vb: WorldLoader.GetString(Integer)
  fullName.vb: RPG.WorldLoader.GetString(Integer)
  name.vb: GetString(Integer)
- uid: RPG.WorldLoader.GetWorldData
  commentId: M:RPG.WorldLoader.GetWorldData
  id: GetWorldData
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetWorldData()
  nameWithType: WorldLoader.GetWorldData()
  fullName: RPG.WorldLoader.GetWorldData()
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetWorldData
    path: ../WorldLoader.cs
    startLine: 62
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the world data loaded by this instance.
  example: []
  syntax:
    content: public WorldData GetWorldData()
    return:
      type: RPG.WorldData
      description: The world data loaded by this instance.
    content.vb: Public Function GetWorldData() As WorldData
  overload: RPG.WorldLoader.GetWorldData*
- uid: RPG.WorldLoader.GetStartingRegion
  commentId: M:RPG.WorldLoader.GetStartingRegion
  id: GetStartingRegion
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetStartingRegion()
  nameWithType: WorldLoader.GetStartingRegion()
  fullName: RPG.WorldLoader.GetStartingRegion()
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetStartingRegion
    path: ../WorldLoader.cs
    startLine: 72
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the starting region for the game.
  example: []
  syntax:
    content: public WorldRegion? GetStartingRegion()
    return:
      type: RPG.WorldRegion
      description: The starting region for the game.
    content.vb: Public Function GetStartingRegion() As WorldRegion
  overload: RPG.WorldLoader.GetStartingRegion*
- uid: RPG.WorldLoader.GetRegionByName(System.String)
  commentId: M:RPG.WorldLoader.GetRegionByName(System.String)
  id: GetRegionByName(System.String)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetRegionByName(string)
  nameWithType: WorldLoader.GetRegionByName(string)
  fullName: RPG.WorldLoader.GetRegionByName(string)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetRegionByName
    path: ../WorldLoader.cs
    startLine: 86
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the region with the specified name.
  example: []
  syntax:
    content: public WorldRegion? GetRegionByName(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the region to get.
    return:
      type: RPG.WorldRegion
      description: The region with the specified name, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if not found.
    content.vb: Public Function GetRegionByName(name As String) As WorldRegion
  overload: RPG.WorldLoader.GetRegionByName*
  nameWithType.vb: WorldLoader.GetRegionByName(String)
  fullName.vb: RPG.WorldLoader.GetRegionByName(String)
  name.vb: GetRegionByName(String)
- uid: RPG.WorldLoader.GetConnectedRegions(RPG.WorldRegion)
  commentId: M:RPG.WorldLoader.GetConnectedRegions(RPG.WorldRegion)
  id: GetConnectedRegions(RPG.WorldRegion)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetConnectedRegions(WorldRegion)
  nameWithType: WorldLoader.GetConnectedRegions(WorldRegion)
  fullName: RPG.WorldLoader.GetConnectedRegions(RPG.WorldRegion)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetConnectedRegions
    path: ../WorldLoader.cs
    startLine: 98
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the region with the specified ID.
  example: []
  syntax:
    content: public IEnumerable<WorldRegion> GetConnectedRegions(WorldRegion region)
    parameters:
    - id: region
      type: RPG.WorldRegion
      description: The ID of the region to get.
    return:
      type: System.Collections.Generic.IEnumerable{RPG.WorldRegion}
      description: The region with the specified ID, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if not found.
    content.vb: Public Function GetConnectedRegions(region As WorldRegion) As IEnumerable(Of WorldRegion)
  overload: RPG.WorldLoader.GetConnectedRegions*
- uid: RPG.WorldLoader.GetLocationByName(RPG.WorldRegion,System.String)
  commentId: M:RPG.WorldLoader.GetLocationByName(RPG.WorldRegion,System.String)
  id: GetLocationByName(RPG.WorldRegion,System.String)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetLocationByName(WorldRegion, string)
  nameWithType: WorldLoader.GetLocationByName(WorldRegion, string)
  fullName: RPG.WorldLoader.GetLocationByName(RPG.WorldRegion, string)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetLocationByName
    path: ../WorldLoader.cs
    startLine: 109
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets a location in the specified region by its name.
  example: []
  syntax:
    content: public Location? GetLocationByName(WorldRegion region, string name)
    parameters:
    - id: region
      type: RPG.WorldRegion
      description: The region to search for the location.
    - id: name
      type: System.String
      description: The name of the location to find.
    return:
      type: RPG.Location
      description: The location with the specified name, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if not found.
    content.vb: Public Function GetLocationByName(region As WorldRegion, name As String) As Location
  overload: RPG.WorldLoader.GetLocationByName*
  nameWithType.vb: WorldLoader.GetLocationByName(WorldRegion, String)
  fullName.vb: RPG.WorldLoader.GetLocationByName(RPG.WorldRegion, String)
  name.vb: GetLocationByName(WorldRegion, String)
- uid: RPG.WorldLoader.GetLocationDescription(RPG.Location)
  commentId: M:RPG.WorldLoader.GetLocationDescription(RPG.Location)
  id: GetLocationDescription(RPG.Location)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetLocationDescription(Location)
  nameWithType: WorldLoader.GetLocationDescription(Location)
  fullName: RPG.WorldLoader.GetLocationDescription(RPG.Location)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetLocationDescription
    path: ../WorldLoader.cs
    startLine: 120
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the description of the specified location.
  example: []
  syntax:
    content: public string GetLocationDescription(Location location)
    parameters:
    - id: location
      type: RPG.Location
      description: The location to get the description for.
    return:
      type: System.String
      description: A string containing the location's description and type.
    content.vb: Public Function GetLocationDescription(location As Location) As String
  overload: RPG.WorldLoader.GetLocationDescription*
- uid: RPG.WorldLoader.LocationNameMatches(RPG.Location,System.String)
  commentId: M:RPG.WorldLoader.LocationNameMatches(RPG.Location,System.String)
  id: LocationNameMatches(RPG.Location,System.String)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: LocationNameMatches(Location, string)
  nameWithType: WorldLoader.LocationNameMatches(Location, string)
  fullName: RPG.WorldLoader.LocationNameMatches(RPG.Location, string)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: LocationNameMatches
    path: ../WorldLoader.cs
    startLine: 133
  assemblies:
  - RPG
  namespace: RPG
  summary: Checks if the location's name matches the specified name.
  example: []
  syntax:
    content: public bool LocationNameMatches(Location location, string name)
    parameters:
    - id: location
      type: RPG.Location
      description: The location to check.
    - id: name
      type: System.String
      description: The name to compare against.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the names match (case-insensitive), otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function LocationNameMatches(location As Location, name As String) As Boolean
  overload: RPG.WorldLoader.LocationNameMatches*
  nameWithType.vb: WorldLoader.LocationNameMatches(Location, String)
  fullName.vb: RPG.WorldLoader.LocationNameMatches(RPG.Location, String)
  name.vb: LocationNameMatches(Location, String)
- uid: RPG.WorldLoader.GetLocationsInRegion(RPG.WorldRegion)
  commentId: M:RPG.WorldLoader.GetLocationsInRegion(RPG.WorldRegion)
  id: GetLocationsInRegion(RPG.WorldRegion)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetLocationsInRegion(WorldRegion)
  nameWithType: WorldLoader.GetLocationsInRegion(WorldRegion)
  fullName: RPG.WorldLoader.GetLocationsInRegion(RPG.WorldRegion)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetLocationsInRegion
    path: ../WorldLoader.cs
    startLine: 143
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets all locations within the specified region.
  example: []
  syntax:
    content: public static IEnumerable<Location> GetLocationsInRegion(WorldRegion region)
    parameters:
    - id: region
      type: RPG.WorldRegion
      description: The region to get locations from.
    return:
      type: System.Collections.Generic.IEnumerable{RPG.Location}
      description: A collection of locations within the specified region.
    content.vb: Public Shared Function GetLocationsInRegion(region As WorldRegion) As IEnumerable(Of Location)
  overload: RPG.WorldLoader.GetLocationsInRegion*
- uid: RPG.WorldLoader.GetNPCsInRegion(RPG.WorldRegion)
  commentId: M:RPG.WorldLoader.GetNPCsInRegion(RPG.WorldRegion)
  id: GetNPCsInRegion(RPG.WorldRegion)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetNPCsInRegion(WorldRegion)
  nameWithType: WorldLoader.GetNPCsInRegion(WorldRegion)
  fullName: RPG.WorldLoader.GetNPCsInRegion(RPG.WorldRegion)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetNPCsInRegion
    path: ../WorldLoader.cs
    startLine: 153
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets all NPCs within the specified region.
  example: []
  syntax:
    content: public IEnumerable<Entity> GetNPCsInRegion(WorldRegion region)
    parameters:
    - id: region
      type: RPG.WorldRegion
      description: The region to get NPCs from.
    return:
      type: System.Collections.Generic.IEnumerable{RPG.Entity}
      description: A collection of NPCs within the specified region.
    content.vb: Public Function GetNPCsInRegion(region As WorldRegion) As IEnumerable(Of Entity)
  overload: RPG.WorldLoader.GetNPCsInRegion*
- uid: RPG.WorldLoader.GetNPCsInLocation(RPG.Location)
  commentId: M:RPG.WorldLoader.GetNPCsInLocation(RPG.Location)
  id: GetNPCsInLocation(RPG.Location)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetNPCsInLocation(Location)
  nameWithType: WorldLoader.GetNPCsInLocation(Location)
  fullName: RPG.WorldLoader.GetNPCsInLocation(RPG.Location)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetNPCsInLocation
    path: ../WorldLoader.cs
    startLine: 163
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets all NPCs within the specified location.
  example: []
  syntax:
    content: public List<Entity> GetNPCsInLocation(Location location)
    parameters:
    - id: location
      type: RPG.Location
      description: The location to get NPCs from.
    return:
      type: System.Collections.Generic.List{RPG.Entity}
      description: A list of NPCs within the specified location.
    content.vb: Public Function GetNPCsInLocation(location As Location) As List(Of Entity)
  overload: RPG.WorldLoader.GetNPCsInLocation*
- uid: RPG.WorldLoader.GetNPCDialogue(RPG.Entity)
  commentId: M:RPG.WorldLoader.GetNPCDialogue(RPG.Entity)
  id: GetNPCDialogue(RPG.Entity)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetNPCDialogue(Entity)
  nameWithType: WorldLoader.GetNPCDialogue(Entity)
  fullName: RPG.WorldLoader.GetNPCDialogue(RPG.Entity)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetNPCDialogue
    path: ../WorldLoader.cs
    startLine: 173
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets a random dialogue line for the specified NPC.
  example: []
  syntax:
    content: public string GetNPCDialogue(Entity npc)
    parameters:
    - id: npc
      type: RPG.Entity
      description: The NPC to get dialogue for.
    return:
      type: System.String
      description: A dialogue string, or "..." if the NPC has no dialogue.
    content.vb: Public Function GetNPCDialogue(npc As Entity) As String
  overload: RPG.WorldLoader.GetNPCDialogue*
- uid: RPG.WorldLoader.GetItemsInRegion(RPG.WorldRegion)
  commentId: M:RPG.WorldLoader.GetItemsInRegion(RPG.WorldRegion)
  id: GetItemsInRegion(RPG.WorldRegion)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetItemsInRegion(WorldRegion)
  nameWithType: WorldLoader.GetItemsInRegion(WorldRegion)
  fullName: RPG.WorldLoader.GetItemsInRegion(RPG.WorldRegion)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetItemsInRegion
    path: ../WorldLoader.cs
    startLine: 188
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets all items within the specified region.
  example: []
  syntax:
    content: public IEnumerable<Item> GetItemsInRegion(WorldRegion region)
    parameters:
    - id: region
      type: RPG.WorldRegion
      description: The region to get items from.
    return:
      type: System.Collections.Generic.IEnumerable{RPG.Item}
      description: A collection of items within the specified region.
    content.vb: Public Function GetItemsInRegion(region As WorldRegion) As IEnumerable(Of Item)
  overload: RPG.WorldLoader.GetItemsInRegion*
- uid: RPG.WorldLoader.GetItemsInLocation(RPG.Location)
  commentId: M:RPG.WorldLoader.GetItemsInLocation(RPG.Location)
  id: GetItemsInLocation(RPG.Location)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetItemsInLocation(Location)
  nameWithType: WorldLoader.GetItemsInLocation(Location)
  fullName: RPG.WorldLoader.GetItemsInLocation(RPG.Location)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetItemsInLocation
    path: ../WorldLoader.cs
    startLine: 198
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets all items within the specified location.
  example: []
  syntax:
    content: public List<Item> GetItemsInLocation(Location location)
    parameters:
    - id: location
      type: RPG.Location
      description: The location to get items from.
    return:
      type: System.Collections.Generic.List{RPG.Item}
      description: A list of items within the specified location.
    content.vb: Public Function GetItemsInLocation(location As Location) As List(Of Item)
  overload: RPG.WorldLoader.GetItemsInLocation*
- uid: RPG.WorldLoader.GetRoute(RPG.WorldRegion,RPG.WorldRegion)
  commentId: M:RPG.WorldLoader.GetRoute(RPG.WorldRegion,RPG.WorldRegion)
  id: GetRoute(RPG.WorldRegion,RPG.WorldRegion)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetRoute(WorldRegion, WorldRegion)
  nameWithType: WorldLoader.GetRoute(WorldRegion, WorldRegion)
  fullName: RPG.WorldLoader.GetRoute(RPG.WorldRegion, RPG.WorldRegion)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetRoute
    path: ../WorldLoader.cs
    startLine: 209
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the route points for traveling between two regions.
  example: []
  syntax:
    content: public List<RoutePoint> GetRoute(WorldRegion from, WorldRegion to)
    parameters:
    - id: from
      type: RPG.WorldRegion
      description: The starting region.
    - id: to
      type: RPG.WorldRegion
      description: The destination region.
    return:
      type: System.Collections.Generic.List{RPG.RoutePoint}
      description: A list of route points describing the path between regions, or an empty list if no route exists.
    content.vb: Public Function GetRoute(from As WorldRegion, [to] As WorldRegion) As List(Of RoutePoint)
  overload: RPG.WorldLoader.GetRoute*
- uid: RPG.WorldLoader.GetRouteDescription(RPG.RoutePoint)
  commentId: M:RPG.WorldLoader.GetRouteDescription(RPG.RoutePoint)
  id: GetRouteDescription(RPG.RoutePoint)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetRouteDescription(RoutePoint)
  nameWithType: WorldLoader.GetRouteDescription(RoutePoint)
  fullName: RPG.WorldLoader.GetRouteDescription(RPG.RoutePoint)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetRouteDescription
    path: ../WorldLoader.cs
    startLine: 220
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the description of the specified route point.
  example: []
  syntax:
    content: public string GetRouteDescription(RoutePoint point)
    parameters:
    - id: point
      type: RPG.RoutePoint
      description: The route point to get the description for.
    return:
      type: System.String
      description: The description of the route point.
    content.vb: Public Function GetRouteDescription(point As RoutePoint) As String
  overload: RPG.WorldLoader.GetRouteDescription*
- uid: RPG.WorldLoader.GetRouteDirections(RPG.RoutePoint)
  commentId: M:RPG.WorldLoader.GetRouteDirections(RPG.RoutePoint)
  id: GetRouteDirections(RPG.RoutePoint)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetRouteDirections(RoutePoint)
  nameWithType: WorldLoader.GetRouteDirections(RoutePoint)
  fullName: RPG.WorldLoader.GetRouteDirections(RPG.RoutePoint)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetRouteDirections
    path: ../WorldLoader.cs
    startLine: 230
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the directions for the specified route point.
  example: []
  syntax:
    content: public string GetRouteDirections(RoutePoint point)
    parameters:
    - id: point
      type: RPG.RoutePoint
      description: The route point to get the directions for.
    return:
      type: System.String
      description: The directions for the route point.
    content.vb: Public Function GetRouteDirections(point As RoutePoint) As String
  overload: RPG.WorldLoader.GetRouteDirections*
- uid: RPG.WorldLoader.GetRouteLandmarks(RPG.RoutePoint)
  commentId: M:RPG.WorldLoader.GetRouteLandmarks(RPG.RoutePoint)
  id: GetRouteLandmarks(RPG.RoutePoint)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetRouteLandmarks(RoutePoint)
  nameWithType: WorldLoader.GetRouteLandmarks(RoutePoint)
  fullName: RPG.WorldLoader.GetRouteLandmarks(RPG.RoutePoint)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetRouteLandmarks
    path: ../WorldLoader.cs
    startLine: 240
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the landmarks associated with the specified route point.
  example: []
  syntax:
    content: public IEnumerable<Location> GetRouteLandmarks(RoutePoint point)
    parameters:
    - id: point
      type: RPG.RoutePoint
      description: The route point to get landmarks for.
    return:
      type: System.Collections.Generic.IEnumerable{RPG.Location}
      description: A collection of locations representing landmarks along the route.
    content.vb: Public Function GetRouteLandmarks(point As RoutePoint) As IEnumerable(Of Location)
  overload: RPG.WorldLoader.GetRouteLandmarks*
- uid: RPG.WorldLoader.GetEntityName(RPG.Entity)
  commentId: M:RPG.WorldLoader.GetEntityName(RPG.Entity)
  id: GetEntityName(RPG.Entity)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetEntityName(Entity)
  nameWithType: WorldLoader.GetEntityName(Entity)
  fullName: RPG.WorldLoader.GetEntityName(RPG.Entity)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetEntityName
    path: ../WorldLoader.cs
    startLine: 266
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the name of the specified entity.
  example: []
  syntax:
    content: public string GetEntityName(Entity entity)
    parameters:
    - id: entity
      type: RPG.Entity
      description: The entity to get the name for.
    return:
      type: System.String
      description: The name of the entity.
    content.vb: Public Function GetEntityName(entity As Entity) As String
  overload: RPG.WorldLoader.GetEntityName*
- uid: RPG.WorldLoader.GetItemName(RPG.Item)
  commentId: M:RPG.WorldLoader.GetItemName(RPG.Item)
  id: GetItemName(RPG.Item)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetItemName(Item)
  nameWithType: WorldLoader.GetItemName(Item)
  fullName: RPG.WorldLoader.GetItemName(RPG.Item)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetItemName
    path: ../WorldLoader.cs
    startLine: 276
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the name of the specified item.
  example: []
  syntax:
    content: public string GetItemName(Item item)
    parameters:
    - id: item
      type: RPG.Item
      description: The item to get the name for.
    return:
      type: System.String
      description: The name of the item.
    content.vb: Public Function GetItemName(item As Item) As String
  overload: RPG.WorldLoader.GetItemName*
- uid: RPG.WorldLoader.GetItemDescription(RPG.Item)
  commentId: M:RPG.WorldLoader.GetItemDescription(RPG.Item)
  id: GetItemDescription(RPG.Item)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetItemDescription(Item)
  nameWithType: WorldLoader.GetItemDescription(Item)
  fullName: RPG.WorldLoader.GetItemDescription(RPG.Item)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetItemDescription
    path: ../WorldLoader.cs
    startLine: 286
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the description of the specified item.
  example: []
  syntax:
    content: public string GetItemDescription(Item item)
    parameters:
    - id: item
      type: RPG.Item
      description: The item to get the description for.
    return:
      type: System.String
      description: The description of the item.
    content.vb: Public Function GetItemDescription(item As Item) As String
  overload: RPG.WorldLoader.GetItemDescription*
- uid: RPG.WorldLoader.GetRegionName(RPG.WorldRegion)
  commentId: M:RPG.WorldLoader.GetRegionName(RPG.WorldRegion)
  id: GetRegionName(RPG.WorldRegion)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetRegionName(WorldRegion)
  nameWithType: WorldLoader.GetRegionName(WorldRegion)
  fullName: RPG.WorldLoader.GetRegionName(RPG.WorldRegion)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetRegionName
    path: ../WorldLoader.cs
    startLine: 296
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the name of the specified region.
  example: []
  syntax:
    content: public string GetRegionName(WorldRegion region)
    parameters:
    - id: region
      type: RPG.WorldRegion
      description: The region to get the name for.
    return:
      type: System.String
      description: The name of the region.
    content.vb: Public Function GetRegionName(region As WorldRegion) As String
  overload: RPG.WorldLoader.GetRegionName*
- uid: RPG.WorldLoader.GetRegionDescription(RPG.WorldRegion)
  commentId: M:RPG.WorldLoader.GetRegionDescription(RPG.WorldRegion)
  id: GetRegionDescription(RPG.WorldRegion)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetRegionDescription(WorldRegion)
  nameWithType: WorldLoader.GetRegionDescription(WorldRegion)
  fullName: RPG.WorldLoader.GetRegionDescription(RPG.WorldRegion)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetRegionDescription
    path: ../WorldLoader.cs
    startLine: 306
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the description of the specified region.
  example: []
  syntax:
    content: public string GetRegionDescription(WorldRegion region)
    parameters:
    - id: region
      type: RPG.WorldRegion
      description: The region to get the description for.
    return:
      type: System.String
      description: The description of the region.
    content.vb: Public Function GetRegionDescription(region As WorldRegion) As String
  overload: RPG.WorldLoader.GetRegionDescription*
- uid: RPG.WorldLoader.GetLocationName(RPG.Location)
  commentId: M:RPG.WorldLoader.GetLocationName(RPG.Location)
  id: GetLocationName(RPG.Location)
  parent: RPG.WorldLoader
  langs:
  - csharp
  - vb
  name: GetLocationName(Location)
  nameWithType: WorldLoader.GetLocationName(Location)
  fullName: RPG.WorldLoader.GetLocationName(RPG.Location)
  type: Method
  source:
    remote:
      path: WorldLoader.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: GetLocationName
    path: ../WorldLoader.cs
    startLine: 316
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets the name of the specified location.
  example: []
  syntax:
    content: public string GetLocationName(Location location)
    parameters:
    - id: location
      type: RPG.Location
      description: The location to get the name for.
    return:
      type: System.String
      description: The name of the location.
    content.vb: Public Function GetLocationName(location As Location) As String
  overload: RPG.WorldLoader.GetLocationName*
references:
- uid: RPG
  commentId: N:RPG
  href: RPG.html
  name: RPG
  nameWithType: RPG
  fullName: RPG
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RPG.WorldLoader
  commentId: T:RPG.WorldLoader
  parent: RPG
  href: RPG.WorldLoader.html
  name: WorldLoader
  nameWithType: WorldLoader
  fullName: RPG.WorldLoader
- uid: RPG.WorldLoader.#ctor*
  commentId: Overload:RPG.WorldLoader.#ctor
  href: RPG.WorldLoader.html#RPG_WorldLoader__ctor_System_String_
  name: WorldLoader
  nameWithType: WorldLoader.WorldLoader
  fullName: RPG.WorldLoader.WorldLoader
  nameWithType.vb: WorldLoader.New
  fullName.vb: RPG.WorldLoader.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RPG.WorldLoader.GetString*
  commentId: Overload:RPG.WorldLoader.GetString
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetString_System_Int32_
  name: GetString
  nameWithType: WorldLoader.GetString
  fullName: RPG.WorldLoader.GetString
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: RPG.WorldLoader.GetWorldData*
  commentId: Overload:RPG.WorldLoader.GetWorldData
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetWorldData
  name: GetWorldData
  nameWithType: WorldLoader.GetWorldData
  fullName: RPG.WorldLoader.GetWorldData
- uid: RPG.WorldData
  commentId: T:RPG.WorldData
  parent: RPG
  href: RPG.WorldData.html
  name: WorldData
  nameWithType: WorldData
  fullName: RPG.WorldData
- uid: RPG.WorldLoader.GetStartingRegion*
  commentId: Overload:RPG.WorldLoader.GetStartingRegion
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetStartingRegion
  name: GetStartingRegion
  nameWithType: WorldLoader.GetStartingRegion
  fullName: RPG.WorldLoader.GetStartingRegion
- uid: RPG.WorldRegion
  commentId: T:RPG.WorldRegion
  parent: RPG
  href: RPG.WorldRegion.html
  name: WorldRegion
  nameWithType: WorldRegion
  fullName: RPG.WorldRegion
- uid: RPG.WorldLoader.GetRegionByName*
  commentId: Overload:RPG.WorldLoader.GetRegionByName
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetRegionByName_System_String_
  name: GetRegionByName
  nameWithType: WorldLoader.GetRegionByName
  fullName: RPG.WorldLoader.GetRegionByName
- uid: RPG.WorldLoader.GetConnectedRegions*
  commentId: Overload:RPG.WorldLoader.GetConnectedRegions
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetConnectedRegions_RPG_WorldRegion_
  name: GetConnectedRegions
  nameWithType: WorldLoader.GetConnectedRegions
  fullName: RPG.WorldLoader.GetConnectedRegions
- uid: System.Collections.Generic.IEnumerable{RPG.WorldRegion}
  commentId: T:System.Collections.Generic.IEnumerable{RPG.WorldRegion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<WorldRegion>
  nameWithType: IEnumerable<WorldRegion>
  fullName: System.Collections.Generic.IEnumerable<RPG.WorldRegion>
  nameWithType.vb: IEnumerable(Of WorldRegion)
  fullName.vb: System.Collections.Generic.IEnumerable(Of RPG.WorldRegion)
  name.vb: IEnumerable(Of WorldRegion)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: RPG.WorldRegion
    name: WorldRegion
    href: RPG.WorldRegion.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: RPG.WorldRegion
    name: WorldRegion
    href: RPG.WorldRegion.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: RPG.WorldLoader.GetLocationByName*
  commentId: Overload:RPG.WorldLoader.GetLocationByName
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetLocationByName_RPG_WorldRegion_System_String_
  name: GetLocationByName
  nameWithType: WorldLoader.GetLocationByName
  fullName: RPG.WorldLoader.GetLocationByName
- uid: RPG.Location
  commentId: T:RPG.Location
  parent: RPG
  href: RPG.Location.html
  name: Location
  nameWithType: Location
  fullName: RPG.Location
- uid: RPG.WorldLoader.GetLocationDescription*
  commentId: Overload:RPG.WorldLoader.GetLocationDescription
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetLocationDescription_RPG_Location_
  name: GetLocationDescription
  nameWithType: WorldLoader.GetLocationDescription
  fullName: RPG.WorldLoader.GetLocationDescription
- uid: RPG.WorldLoader.LocationNameMatches*
  commentId: Overload:RPG.WorldLoader.LocationNameMatches
  href: RPG.WorldLoader.html#RPG_WorldLoader_LocationNameMatches_RPG_Location_System_String_
  name: LocationNameMatches
  nameWithType: WorldLoader.LocationNameMatches
  fullName: RPG.WorldLoader.LocationNameMatches
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RPG.WorldLoader.GetLocationsInRegion*
  commentId: Overload:RPG.WorldLoader.GetLocationsInRegion
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetLocationsInRegion_RPG_WorldRegion_
  name: GetLocationsInRegion
  nameWithType: WorldLoader.GetLocationsInRegion
  fullName: RPG.WorldLoader.GetLocationsInRegion
- uid: System.Collections.Generic.IEnumerable{RPG.Location}
  commentId: T:System.Collections.Generic.IEnumerable{RPG.Location}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Location>
  nameWithType: IEnumerable<Location>
  fullName: System.Collections.Generic.IEnumerable<RPG.Location>
  nameWithType.vb: IEnumerable(Of Location)
  fullName.vb: System.Collections.Generic.IEnumerable(Of RPG.Location)
  name.vb: IEnumerable(Of Location)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: RPG.Location
    name: Location
    href: RPG.Location.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: RPG.Location
    name: Location
    href: RPG.Location.html
  - name: )
- uid: RPG.WorldLoader.GetNPCsInRegion*
  commentId: Overload:RPG.WorldLoader.GetNPCsInRegion
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetNPCsInRegion_RPG_WorldRegion_
  name: GetNPCsInRegion
  nameWithType: WorldLoader.GetNPCsInRegion
  fullName: RPG.WorldLoader.GetNPCsInRegion
- uid: System.Collections.Generic.IEnumerable{RPG.Entity}
  commentId: T:System.Collections.Generic.IEnumerable{RPG.Entity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Entity>
  nameWithType: IEnumerable<Entity>
  fullName: System.Collections.Generic.IEnumerable<RPG.Entity>
  nameWithType.vb: IEnumerable(Of Entity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of RPG.Entity)
  name.vb: IEnumerable(Of Entity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: RPG.Entity
    name: Entity
    href: RPG.Entity.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: RPG.Entity
    name: Entity
    href: RPG.Entity.html
  - name: )
- uid: RPG.WorldLoader.GetNPCsInLocation*
  commentId: Overload:RPG.WorldLoader.GetNPCsInLocation
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetNPCsInLocation_RPG_Location_
  name: GetNPCsInLocation
  nameWithType: WorldLoader.GetNPCsInLocation
  fullName: RPG.WorldLoader.GetNPCsInLocation
- uid: System.Collections.Generic.List{RPG.Entity}
  commentId: T:System.Collections.Generic.List{RPG.Entity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Entity>
  nameWithType: List<Entity>
  fullName: System.Collections.Generic.List<RPG.Entity>
  nameWithType.vb: List(Of Entity)
  fullName.vb: System.Collections.Generic.List(Of RPG.Entity)
  name.vb: List(Of Entity)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RPG.Entity
    name: Entity
    href: RPG.Entity.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RPG.Entity
    name: Entity
    href: RPG.Entity.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: RPG.WorldLoader.GetNPCDialogue*
  commentId: Overload:RPG.WorldLoader.GetNPCDialogue
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetNPCDialogue_RPG_Entity_
  name: GetNPCDialogue
  nameWithType: WorldLoader.GetNPCDialogue
  fullName: RPG.WorldLoader.GetNPCDialogue
- uid: RPG.Entity
  commentId: T:RPG.Entity
  parent: RPG
  href: RPG.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: RPG.Entity
- uid: RPG.WorldLoader.GetItemsInRegion*
  commentId: Overload:RPG.WorldLoader.GetItemsInRegion
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetItemsInRegion_RPG_WorldRegion_
  name: GetItemsInRegion
  nameWithType: WorldLoader.GetItemsInRegion
  fullName: RPG.WorldLoader.GetItemsInRegion
- uid: System.Collections.Generic.IEnumerable{RPG.Item}
  commentId: T:System.Collections.Generic.IEnumerable{RPG.Item}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Item>
  nameWithType: IEnumerable<Item>
  fullName: System.Collections.Generic.IEnumerable<RPG.Item>
  nameWithType.vb: IEnumerable(Of Item)
  fullName.vb: System.Collections.Generic.IEnumerable(Of RPG.Item)
  name.vb: IEnumerable(Of Item)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: RPG.Item
    name: Item
    href: RPG.Item.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: RPG.Item
    name: Item
    href: RPG.Item.html
  - name: )
- uid: RPG.WorldLoader.GetItemsInLocation*
  commentId: Overload:RPG.WorldLoader.GetItemsInLocation
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetItemsInLocation_RPG_Location_
  name: GetItemsInLocation
  nameWithType: WorldLoader.GetItemsInLocation
  fullName: RPG.WorldLoader.GetItemsInLocation
- uid: System.Collections.Generic.List{RPG.Item}
  commentId: T:System.Collections.Generic.List{RPG.Item}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Item>
  nameWithType: List<Item>
  fullName: System.Collections.Generic.List<RPG.Item>
  nameWithType.vb: List(Of Item)
  fullName.vb: System.Collections.Generic.List(Of RPG.Item)
  name.vb: List(Of Item)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RPG.Item
    name: Item
    href: RPG.Item.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RPG.Item
    name: Item
    href: RPG.Item.html
  - name: )
- uid: RPG.WorldLoader.GetRoute*
  commentId: Overload:RPG.WorldLoader.GetRoute
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetRoute_RPG_WorldRegion_RPG_WorldRegion_
  name: GetRoute
  nameWithType: WorldLoader.GetRoute
  fullName: RPG.WorldLoader.GetRoute
- uid: System.Collections.Generic.List{RPG.RoutePoint}
  commentId: T:System.Collections.Generic.List{RPG.RoutePoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<RoutePoint>
  nameWithType: List<RoutePoint>
  fullName: System.Collections.Generic.List<RPG.RoutePoint>
  nameWithType.vb: List(Of RoutePoint)
  fullName.vb: System.Collections.Generic.List(Of RPG.RoutePoint)
  name.vb: List(Of RoutePoint)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RPG.RoutePoint
    name: RoutePoint
    href: RPG.RoutePoint.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RPG.RoutePoint
    name: RoutePoint
    href: RPG.RoutePoint.html
  - name: )
- uid: RPG.WorldLoader.GetRouteDescription*
  commentId: Overload:RPG.WorldLoader.GetRouteDescription
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetRouteDescription_RPG_RoutePoint_
  name: GetRouteDescription
  nameWithType: WorldLoader.GetRouteDescription
  fullName: RPG.WorldLoader.GetRouteDescription
- uid: RPG.RoutePoint
  commentId: T:RPG.RoutePoint
  parent: RPG
  href: RPG.RoutePoint.html
  name: RoutePoint
  nameWithType: RoutePoint
  fullName: RPG.RoutePoint
- uid: RPG.WorldLoader.GetRouteDirections*
  commentId: Overload:RPG.WorldLoader.GetRouteDirections
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetRouteDirections_RPG_RoutePoint_
  name: GetRouteDirections
  nameWithType: WorldLoader.GetRouteDirections
  fullName: RPG.WorldLoader.GetRouteDirections
- uid: RPG.WorldLoader.GetRouteLandmarks*
  commentId: Overload:RPG.WorldLoader.GetRouteLandmarks
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetRouteLandmarks_RPG_RoutePoint_
  name: GetRouteLandmarks
  nameWithType: WorldLoader.GetRouteLandmarks
  fullName: RPG.WorldLoader.GetRouteLandmarks
- uid: RPG.WorldLoader.GetEntityName*
  commentId: Overload:RPG.WorldLoader.GetEntityName
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetEntityName_RPG_Entity_
  name: GetEntityName
  nameWithType: WorldLoader.GetEntityName
  fullName: RPG.WorldLoader.GetEntityName
- uid: RPG.WorldLoader.GetItemName*
  commentId: Overload:RPG.WorldLoader.GetItemName
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetItemName_RPG_Item_
  name: GetItemName
  nameWithType: WorldLoader.GetItemName
  fullName: RPG.WorldLoader.GetItemName
- uid: RPG.Item
  commentId: T:RPG.Item
  parent: RPG
  href: RPG.Item.html
  name: Item
  nameWithType: Item
  fullName: RPG.Item
- uid: RPG.WorldLoader.GetItemDescription*
  commentId: Overload:RPG.WorldLoader.GetItemDescription
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetItemDescription_RPG_Item_
  name: GetItemDescription
  nameWithType: WorldLoader.GetItemDescription
  fullName: RPG.WorldLoader.GetItemDescription
- uid: RPG.WorldLoader.GetRegionName*
  commentId: Overload:RPG.WorldLoader.GetRegionName
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetRegionName_RPG_WorldRegion_
  name: GetRegionName
  nameWithType: WorldLoader.GetRegionName
  fullName: RPG.WorldLoader.GetRegionName
- uid: RPG.WorldLoader.GetRegionDescription*
  commentId: Overload:RPG.WorldLoader.GetRegionDescription
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetRegionDescription_RPG_WorldRegion_
  name: GetRegionDescription
  nameWithType: WorldLoader.GetRegionDescription
  fullName: RPG.WorldLoader.GetRegionDescription
- uid: RPG.WorldLoader.GetLocationName*
  commentId: Overload:RPG.WorldLoader.GetLocationName
  href: RPG.WorldLoader.html#RPG_WorldLoader_GetLocationName_RPG_Location_
  name: GetLocationName
  nameWithType: WorldLoader.GetLocationName
  fullName: RPG.WorldLoader.GetLocationName
