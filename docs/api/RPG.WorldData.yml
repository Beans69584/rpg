### YamlMime:ManagedReference
items:
- uid: RPG.WorldData
  commentId: T:RPG.WorldData
  id: WorldData
  parent: RPG
  children:
  - RPG.WorldData.Header
  - RPG.WorldData.Items
  - RPG.WorldData.NPCs
  - RPG.WorldData.Regions
  - RPG.WorldData.Resources
  langs:
  - csharp
  - vb
  name: WorldData
  nameWithType: WorldData
  fullName: RPG.WorldData
  type: Class
  source:
    remote:
      path: WorldData.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: WorldData
    path: ../WorldData.cs
    startLine: 47
  assemblies:
  - RPG
  namespace: RPG
  summary: Contains all data related to the game world
  example: []
  syntax:
    content: public class WorldData
    content.vb: Public Class WorldData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RPG.WorldData.Header
  commentId: P:RPG.WorldData.Header
  id: Header
  parent: RPG.WorldData
  langs:
  - csharp
  - vb
  name: Header
  nameWithType: WorldData.Header
  fullName: RPG.WorldData.Header
  type: Property
  source:
    remote:
      path: WorldData.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Header
    path: ../WorldData.cs
    startLine: 52
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the header information
  example: []
  syntax:
    content: public Header Header { get; set; }
    parameters: []
    return:
      type: RPG.Header
    content.vb: Public Property Header As Header
  overload: RPG.WorldData.Header*
- uid: RPG.WorldData.Resources
  commentId: P:RPG.WorldData.Resources
  id: Resources
  parent: RPG.WorldData
  langs:
  - csharp
  - vb
  name: Resources
  nameWithType: WorldData.Resources
  fullName: RPG.WorldData.Resources
  type: Property
  source:
    remote:
      path: WorldData.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Resources
    path: ../WorldData.cs
    startLine: 56
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the resource table
  example: []
  syntax:
    content: public ResourceTable Resources { get; set; }
    parameters: []
    return:
      type: RPG.ResourceTable
    content.vb: Public Property Resources As ResourceTable
  overload: RPG.WorldData.Resources*
- uid: RPG.WorldData.Regions
  commentId: P:RPG.WorldData.Regions
  id: Regions
  parent: RPG.WorldData
  langs:
  - csharp
  - vb
  name: Regions
  nameWithType: WorldData.Regions
  fullName: RPG.WorldData.Regions
  type: Property
  source:
    remote:
      path: WorldData.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Regions
    path: ../WorldData.cs
    startLine: 60
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the list of world regions
  example: []
  syntax:
    content: public List<WorldRegion> Regions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{RPG.WorldRegion}
    content.vb: Public Property Regions As List(Of WorldRegion)
  overload: RPG.WorldData.Regions*
- uid: RPG.WorldData.NPCs
  commentId: P:RPG.WorldData.NPCs
  id: NPCs
  parent: RPG.WorldData
  langs:
  - csharp
  - vb
  name: NPCs
  nameWithType: WorldData.NPCs
  fullName: RPG.WorldData.NPCs
  type: Property
  source:
    remote:
      path: WorldData.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: NPCs
    path: ../WorldData.cs
    startLine: 64
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the list of NPCs in the world
  example: []
  syntax:
    content: public List<Entity> NPCs { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{RPG.Entity}
    content.vb: Public Property NPCs As List(Of Entity)
  overload: RPG.WorldData.NPCs*
- uid: RPG.WorldData.Items
  commentId: P:RPG.WorldData.Items
  id: Items
  parent: RPG.WorldData
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: WorldData.Items
  fullName: RPG.WorldData.Items
  type: Property
  source:
    remote:
      path: WorldData.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Items
    path: ../WorldData.cs
    startLine: 68
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the list of items in the world
  example: []
  syntax:
    content: public List<Item> Items { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{RPG.Item}
    content.vb: Public Property Items As List(Of Item)
  overload: RPG.WorldData.Items*
references:
- uid: RPG
  commentId: N:RPG
  href: RPG.html
  name: RPG
  nameWithType: RPG
  fullName: RPG
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RPG.WorldData.Header*
  commentId: Overload:RPG.WorldData.Header
  href: RPG.WorldData.html#RPG_WorldData_Header
  name: Header
  nameWithType: WorldData.Header
  fullName: RPG.WorldData.Header
- uid: RPG.Header
  commentId: T:RPG.Header
  parent: RPG
  href: RPG.Header.html
  name: Header
  nameWithType: Header
  fullName: RPG.Header
- uid: RPG.WorldData.Resources*
  commentId: Overload:RPG.WorldData.Resources
  href: RPG.WorldData.html#RPG_WorldData_Resources
  name: Resources
  nameWithType: WorldData.Resources
  fullName: RPG.WorldData.Resources
- uid: RPG.ResourceTable
  commentId: T:RPG.ResourceTable
  parent: RPG
  href: RPG.ResourceTable.html
  name: ResourceTable
  nameWithType: ResourceTable
  fullName: RPG.ResourceTable
- uid: RPG.WorldData.Regions*
  commentId: Overload:RPG.WorldData.Regions
  href: RPG.WorldData.html#RPG_WorldData_Regions
  name: Regions
  nameWithType: WorldData.Regions
  fullName: RPG.WorldData.Regions
- uid: System.Collections.Generic.List{RPG.WorldRegion}
  commentId: T:System.Collections.Generic.List{RPG.WorldRegion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<WorldRegion>
  nameWithType: List<WorldRegion>
  fullName: System.Collections.Generic.List<RPG.WorldRegion>
  nameWithType.vb: List(Of WorldRegion)
  fullName.vb: System.Collections.Generic.List(Of RPG.WorldRegion)
  name.vb: List(Of WorldRegion)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RPG.WorldRegion
    name: WorldRegion
    href: RPG.WorldRegion.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RPG.WorldRegion
    name: WorldRegion
    href: RPG.WorldRegion.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: RPG.WorldData.NPCs*
  commentId: Overload:RPG.WorldData.NPCs
  href: RPG.WorldData.html#RPG_WorldData_NPCs
  name: NPCs
  nameWithType: WorldData.NPCs
  fullName: RPG.WorldData.NPCs
- uid: System.Collections.Generic.List{RPG.Entity}
  commentId: T:System.Collections.Generic.List{RPG.Entity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Entity>
  nameWithType: List<Entity>
  fullName: System.Collections.Generic.List<RPG.Entity>
  nameWithType.vb: List(Of Entity)
  fullName.vb: System.Collections.Generic.List(Of RPG.Entity)
  name.vb: List(Of Entity)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RPG.Entity
    name: Entity
    href: RPG.Entity.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RPG.Entity
    name: Entity
    href: RPG.Entity.html
  - name: )
- uid: RPG.WorldData.Items*
  commentId: Overload:RPG.WorldData.Items
  href: RPG.WorldData.html#RPG_WorldData_Items
  name: Items
  nameWithType: WorldData.Items
  fullName: RPG.WorldData.Items
- uid: System.Collections.Generic.List{RPG.Item}
  commentId: T:System.Collections.Generic.List{RPG.Item}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Item>
  nameWithType: List<Item>
  fullName: System.Collections.Generic.List<RPG.Item>
  nameWithType.vb: List(Of Item)
  fullName.vb: System.Collections.Generic.List(Of RPG.Item)
  name.vb: List(Of Item)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RPG.Item
    name: Item
    href: RPG.Item.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RPG.Item
    name: Item
    href: RPG.Item.html
  - name: )
