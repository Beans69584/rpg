### YamlMime:ManagedReference
items:
- uid: RPG.RegionConfig
  commentId: T:RPG.RegionConfig
  id: RegionConfig
  parent: RPG
  children:
  - RPG.RegionConfig.Connections
  - RPG.RegionConfig.Description
  - RPG.RegionConfig.Items
  - RPG.RegionConfig.Locations
  - RPG.RegionConfig.NPCs
  - RPG.RegionConfig.Name
  - RPG.RegionConfig.Routes
  langs:
  - csharp
  - vb
  name: RegionConfig
  nameWithType: RegionConfig
  fullName: RPG.RegionConfig
  type: Class
  source:
    remote:
      path: ProceduralWorldGenerator.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: RegionConfig
    path: ../ProceduralWorldGenerator.cs
    startLine: 889
  assemblies:
  - RPG
  namespace: RPG
  summary: Represents the configuration for a region in the world.
  example: []
  syntax:
    content: public class RegionConfig
    content.vb: Public Class RegionConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RPG.RegionConfig.Name
  commentId: P:RPG.RegionConfig.Name
  id: Name
  parent: RPG.RegionConfig
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RegionConfig.Name
  fullName: RPG.RegionConfig.Name
  type: Property
  source:
    remote:
      path: ProceduralWorldGenerator.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Name
    path: ../ProceduralWorldGenerator.cs
    startLine: 894
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the name of the region.
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: RPG.RegionConfig.Name*
- uid: RPG.RegionConfig.Description
  commentId: P:RPG.RegionConfig.Description
  id: Description
  parent: RPG.RegionConfig
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: RegionConfig.Description
  fullName: RPG.RegionConfig.Description
  type: Property
  source:
    remote:
      path: ProceduralWorldGenerator.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Description
    path: ../ProceduralWorldGenerator.cs
    startLine: 898
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the description of the region.
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: RPG.RegionConfig.Description*
- uid: RPG.RegionConfig.Connections
  commentId: P:RPG.RegionConfig.Connections
  id: Connections
  parent: RPG.RegionConfig
  langs:
  - csharp
  - vb
  name: Connections
  nameWithType: RegionConfig.Connections
  fullName: RPG.RegionConfig.Connections
  type: Property
  source:
    remote:
      path: ProceduralWorldGenerator.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Connections
    path: ../ProceduralWorldGenerator.cs
    startLine: 902
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the list of connections to other regions.
  example: []
  syntax:
    content: public List<string> Connections { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property Connections As List(Of String)
  overload: RPG.RegionConfig.Connections*
- uid: RPG.RegionConfig.NPCs
  commentId: P:RPG.RegionConfig.NPCs
  id: NPCs
  parent: RPG.RegionConfig
  langs:
  - csharp
  - vb
  name: NPCs
  nameWithType: RegionConfig.NPCs
  fullName: RPG.RegionConfig.NPCs
  type: Property
  source:
    remote:
      path: ProceduralWorldGenerator.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: NPCs
    path: ../ProceduralWorldGenerator.cs
    startLine: 906
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the list of NPCs in the region.
  example: []
  syntax:
    content: public List<string> NPCs { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property NPCs As List(Of String)
  overload: RPG.RegionConfig.NPCs*
- uid: RPG.RegionConfig.Items
  commentId: P:RPG.RegionConfig.Items
  id: Items
  parent: RPG.RegionConfig
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: RegionConfig.Items
  fullName: RPG.RegionConfig.Items
  type: Property
  source:
    remote:
      path: ProceduralWorldGenerator.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Items
    path: ../ProceduralWorldGenerator.cs
    startLine: 910
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the list of items in the region.
  example: []
  syntax:
    content: public List<string> Items { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property Items As List(Of String)
  overload: RPG.RegionConfig.Items*
- uid: RPG.RegionConfig.Locations
  commentId: P:RPG.RegionConfig.Locations
  id: Locations
  parent: RPG.RegionConfig
  langs:
  - csharp
  - vb
  name: Locations
  nameWithType: RegionConfig.Locations
  fullName: RPG.RegionConfig.Locations
  type: Property
  source:
    remote:
      path: ProceduralWorldGenerator.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Locations
    path: ../ProceduralWorldGenerator.cs
    startLine: 914
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the list of locations in the region.
  example: []
  syntax:
    content: public List<LocationConfig> Locations { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{RPG.LocationConfig}
    content.vb: Public Property Locations As List(Of LocationConfig)
  overload: RPG.RegionConfig.Locations*
- uid: RPG.RegionConfig.Routes
  commentId: P:RPG.RegionConfig.Routes
  id: Routes
  parent: RPG.RegionConfig
  langs:
  - csharp
  - vb
  name: Routes
  nameWithType: RegionConfig.Routes
  fullName: RPG.RegionConfig.Routes
  type: Property
  source:
    remote:
      path: ProceduralWorldGenerator.cs
      branch: main
      repo: git@ssh.konpeki.co.uk:/root/work.git
    id: Routes
    path: ../ProceduralWorldGenerator.cs
    startLine: 918
  assemblies:
  - RPG
  namespace: RPG
  summary: Gets or sets the list of routes to other regions.
  example: []
  syntax:
    content: public Dictionary<string, List<RoutePoint>> Routes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RPG.RoutePoint}}
    content.vb: Public Property Routes As Dictionary(Of String, List(Of RoutePoint))
  overload: RPG.RegionConfig.Routes*
references:
- uid: RPG
  commentId: N:RPG
  href: RPG.html
  name: RPG
  nameWithType: RPG
  fullName: RPG
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RPG.RegionConfig.Name*
  commentId: Overload:RPG.RegionConfig.Name
  href: RPG.RegionConfig.html#RPG_RegionConfig_Name
  name: Name
  nameWithType: RegionConfig.Name
  fullName: RPG.RegionConfig.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RPG.RegionConfig.Description*
  commentId: Overload:RPG.RegionConfig.Description
  href: RPG.RegionConfig.html#RPG_RegionConfig_Description
  name: Description
  nameWithType: RegionConfig.Description
  fullName: RPG.RegionConfig.Description
- uid: RPG.RegionConfig.Connections*
  commentId: Overload:RPG.RegionConfig.Connections
  href: RPG.RegionConfig.html#RPG_RegionConfig_Connections
  name: Connections
  nameWithType: RegionConfig.Connections
  fullName: RPG.RegionConfig.Connections
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: RPG.RegionConfig.NPCs*
  commentId: Overload:RPG.RegionConfig.NPCs
  href: RPG.RegionConfig.html#RPG_RegionConfig_NPCs
  name: NPCs
  nameWithType: RegionConfig.NPCs
  fullName: RPG.RegionConfig.NPCs
- uid: RPG.RegionConfig.Items*
  commentId: Overload:RPG.RegionConfig.Items
  href: RPG.RegionConfig.html#RPG_RegionConfig_Items
  name: Items
  nameWithType: RegionConfig.Items
  fullName: RPG.RegionConfig.Items
- uid: RPG.RegionConfig.Locations*
  commentId: Overload:RPG.RegionConfig.Locations
  href: RPG.RegionConfig.html#RPG_RegionConfig_Locations
  name: Locations
  nameWithType: RegionConfig.Locations
  fullName: RPG.RegionConfig.Locations
- uid: System.Collections.Generic.List{RPG.LocationConfig}
  commentId: T:System.Collections.Generic.List{RPG.LocationConfig}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<LocationConfig>
  nameWithType: List<LocationConfig>
  fullName: System.Collections.Generic.List<RPG.LocationConfig>
  nameWithType.vb: List(Of LocationConfig)
  fullName.vb: System.Collections.Generic.List(Of RPG.LocationConfig)
  name.vb: List(Of LocationConfig)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RPG.LocationConfig
    name: LocationConfig
    href: RPG.LocationConfig.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RPG.LocationConfig
    name: LocationConfig
    href: RPG.LocationConfig.html
  - name: )
- uid: RPG.RegionConfig.Routes*
  commentId: Overload:RPG.RegionConfig.Routes
  href: RPG.RegionConfig.html#RPG_RegionConfig_Routes
  name: Routes
  nameWithType: RegionConfig.Routes
  fullName: RPG.RegionConfig.Routes
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RPG.RoutePoint}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RPG.RoutePoint}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, List<RoutePoint>>
  nameWithType: Dictionary<string, List<RoutePoint>>
  fullName: System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<RPG.RoutePoint>>
  nameWithType.vb: Dictionary(Of String, List(Of RoutePoint))
  fullName.vb: System.Collections.Generic.Dictionary(Of String, System.Collections.Generic.List(Of RPG.RoutePoint))
  name.vb: Dictionary(Of String, List(Of RoutePoint))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RPG.RoutePoint
    name: RoutePoint
    href: RPG.RoutePoint.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RPG.RoutePoint
    name: RoutePoint
    href: RPG.RoutePoint.html
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
